{"version":3,"file":"static/js/649.4a300cba.chunk.js","mappings":"mNA2EA,WAAeA,EAAAA,EAAAA,KAAQ,gBAAGC,EAAH,EAAGA,IAAH,iBAAmBA,KAAQ,CAAEC,eAAAA,EAAAA,GAAgBC,cAAAA,EAAAA,IAApE,EArEe,SAAC,GAAiD,IAA/CA,EAA8C,EAA9CA,cAAeD,EAA+B,EAA/BA,eAAgBE,EAAe,EAAfA,SAC/C,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAsCF,EAAAA,EAAAA,WAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAoCJ,EAAAA,EAAAA,WAAS,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KAEQC,GAAaC,EAAAA,EAAAA,MAAbD,SAEFE,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,UAAhB,OAChB,SAAC,KAAD,CAAMC,GAAIF,EAAMG,UAAU,8BAA1B,UACE,mBACEC,KAAK,SACLD,UAAS,kGACPP,IAAaI,EACT,kDADJ,iEAIFK,QAAS,kBAAMd,GAAY,SAAAe,GAAI,OAAKL,EAAYK,GAAQA,MACxDC,QAASN,EARX,SASGF,OAKDS,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASR,EAAZ,EAAYA,UAAZ,OACnB,oBACEG,KAAK,SACLD,UAAS,mFACPF,EACI,4EACA,6EAENI,QAAS,WACPZ,GAAe,SAAAa,GAAI,OAAKL,EAAYK,GAAQA,KAC5CnB,EAAcc,EAAYb,GAAYA,IAExCmB,QAASN,EAXX,iBAYSQ,MAcX,OACE,iBAAKN,UAAU,8CAAf,WACE,4BACE,SAACL,EAAD,CAAWC,MAAM,QAAQC,KAAK,SAASC,WAAYX,KACnD,SAACQ,EAAD,CAAWC,MAAM,OAAOC,KAAK,QAAQC,UAAWX,QAGlD,gBAAKa,UAAU,8DAAf,UACE,SAAC,IAAD,CAAgBO,SAlBL,SAAAC,GACXA,GACFhB,GAAc,GACdT,EAAe,UAEfS,GAAc,GACdT,EAAe,WAYuByB,QAASjB,EAAYkB,KAAM,OAAQT,UAAU,sBAGnF,4BACE,SAACK,EAAD,CAAcC,QAAQ,IAAIR,UAAWT,KACrC,SAACgB,EAAD,CAAcC,QAAQ,IAAIR,WAAYT","sources":["components/Navbar.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport DarkModeToggle from \"react-dark-mode-toggle\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { setCurrentMode, setDegreeMode } from \"../Redux/Actions/Actions\";\r\n\r\nconst Navbar = ({ setDegreeMode, setCurrentMode, degree_C }) => {\r\n  const [isActive, setIsActive] = useState(true);\r\n  const [isDegActive, setIsDegActive] = useState(true);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  const NavButton = ({ title, path, isClicked }) => (\r\n    <Link to={path} className=\"text-black hover:text-black\">\r\n      <button\r\n        type=\"button\"\r\n        className={`text-base md:text-xl font-bold mr-4 border-black dark:border-gray-200 transition-colors ${\r\n          pathname === path\r\n            ? \"border-b-2 dark:text-gray-200 transition-colors\"\r\n            : `text-gray-300 dark:text-gray-500 border-b-0 transition-colors`\r\n        }`}\r\n        onClick={() => setIsActive(prev => (isClicked ? prev : !prev))}\r\n        clicked={isClicked}>\r\n        {title}\r\n      </button>\r\n    </Link>\r\n  );\r\n\r\n  const DegreeButton = ({ degSign, isClicked }) => (\r\n    <button\r\n      type=\"button\"\r\n      className={`text-base md:text-xl font-bold mr-4 rounded-full w-8 h-8 md:w-10 md:h-10 ${\r\n        isClicked\r\n          ? \"text-white dark:text-gray-600 bg-black dark:bg-gray-200 transition-colors\"\r\n          : \"bg-white dark:bg-gray-700 text-black dark:text-gray-200 transition-colors\"\r\n      }`}\r\n      onClick={() => {\r\n        setIsDegActive(prev => (isClicked ? prev : !prev));\r\n        setDegreeMode(isClicked ? degree_C : !degree_C);\r\n      }}\r\n      clicked={isClicked}>\r\n      &#176;{degSign}\r\n    </button>\r\n  );\r\n\r\n  const onChange = checked => {\r\n    if (checked) {\r\n      setIsDarkMode(true);\r\n      setCurrentMode(\"dark\");\r\n    } else {\r\n      setIsDarkMode(false);\r\n      setCurrentMode(\"light\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap justify-between items-center\">\r\n      <div>\r\n        <NavButton title=\"Today\" path=\"/today\" isClicked={!isActive} />\r\n        <NavButton title=\"Week\" path=\"/week\" isClicked={isActive} />\r\n      </div>\r\n\r\n      <div className=\"w-24 md:w-26 h-10 md:h-12 flex justify-between items-center\">\r\n        <DarkModeToggle onChange={onChange} checked={isDarkMode} size={\"100%\"} className=\"DarkModeToggle\" />\r\n      </div>\r\n\r\n      <div>\r\n        <DegreeButton degSign=\"C\" isClicked={isDegActive} />\r\n        <DegreeButton degSign=\"F\" isClicked={!isDegActive} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(({ app }) => ({ ...app }), { setCurrentMode, setDegreeMode })(Navbar);\r\n"],"names":["connect","app","setCurrentMode","setDegreeMode","degree_C","useState","isActive","setIsActive","isDegActive","setIsDegActive","isDarkMode","setIsDarkMode","pathname","useLocation","NavButton","title","path","isClicked","to","className","type","onClick","prev","clicked","DegreeButton","degSign","onChange","checked","size"],"sourceRoot":""}