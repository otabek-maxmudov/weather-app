{"version":3,"file":"static/js/484.2fb207f2.chunk.js","mappings":"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","sources":["App.js","functions/api.js","Redux/Actions/Actions.js"],"sourcesContent":["import { Spin } from \"antd\";\nimport moment from \"moment\";\nimport { lazy, Suspense, useEffect } from \"react\";\nimport { RiLoader2Fill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport { getCurrentAstronomy, getCurrentForecast, getWeekdaysForecast, setCordinates } from \"./Redux/Actions/Actions\";\n\nconst Mainpage = lazy(() => import(\"./components/MainPage\"));\nconst Sidebar = lazy(() => import(\"./components/Sidebar/Sidebar\"));\n\nconst App = ({ currentMode, getCurrentAstronomy, getCurrentForecast, getWeekdaysForecast, setCordinates, cords }) => {\n  useEffect(() => {\n    getCurrentForecast(\"current.json\", { q: `${cords[0]},${cords[1]}` });\n    getCurrentAstronomy(\"astronomy.json\", { q: `${cords[0]},${cords[1]}`, dt: moment().format(\"YYYY-MM-DD\") });\n    getWeekdaysForecast(\"forecast/daily\", { lat: cords[0], lon: cords[1] });\n  }, [cords]);\n\n  const renderLoader = () => (\n    <div className=\"w-full h-screen flex justify-center items-center\">\n      <Spin indicator={<RiLoader2Fill className=\"animate-spin\" />} spinning tip=\"Loading...\" />\n    </div>\n  );\n\n  return (\n    <Suspense fallback={renderLoader()}>\n      <div className={`flex w-full h-screen md:h-full sm:h-full ${currentMode}`}>\n        <Sidebar />\n        <Mainpage />\n      </div>\n    </Suspense>\n  );\n};\n\nexport default connect(({ app }) => ({ ...app }), {\n  getCurrentAstronomy,\n  getCurrentForecast,\n  getWeekdaysForecast,\n  setCordinates,\n})(App);\n","import axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\nconst wa = \"https://api.weatherapi.com/v1/\";\r\nconst owm = \"https://community-open-weather-map.p.rapidapi.com/\";\r\n\r\n/* eslint-disable import/no-anonymous-default-export */\r\nexport default async (url, method, param, service) => {\r\n  try {\r\n    return await axios({\r\n      method,\r\n      url: service === \"wa\" ? wa + url : owm + url,\r\n      params:\r\n        service === \"wa\"\r\n          ? {\r\n              ...param,\r\n              key: \"5acedb6013114cefb2d95845220207\",\r\n              aqi: \"yes\",\r\n            }\r\n          : { ...param, cnt: \"7\", units: \"metric\" },\r\n      headers: {\r\n        \"X-RapidAPI-Key\": \"8f77261737msh9b27983e23282fdp1e189fjsne0887198b176\",\r\n        \"X-RapidAPI-Host\":\r\n          service === \"wa\" ? \"weatherapi-com.p.rapidapi.com\" : \"community-open-weather-map.p.rapidapi.com\",\r\n      },\r\n    });\r\n  } catch (error) {\r\n    message.error({ content: error.response.statusText, key: \"error\" });\r\n  }\r\n};\r\n","import api from \"../../functions/api\";\r\nimport {\r\n  SET_CURRENT_MODE,\r\n  SET_CURRENT_FORECAST,\r\n  SET_LOCATION,\r\n  SET_SEARCH_RESULT,\r\n  SET_ASTRO_DATA,\r\n  SET_WEEKDAYS_FORECAST,\r\n  SET_DEGREE,\r\n  SET_CORDINATES,\r\n} from \"./Types\";\r\n\r\nexport const getCurrentForecast = (url, params) => async dispatch => {\r\n  const res = await api(url, \"GET\", params, \"wa\");\r\n\r\n  if (res && res.status === 200) {\r\n    dispatch({\r\n      type: SET_CURRENT_FORECAST,\r\n      payload: res.data.current,\r\n    });\r\n    dispatch({\r\n      type: SET_LOCATION,\r\n      payload: res.data.location,\r\n    });\r\n    dispatch({\r\n      type: SET_ASTRO_DATA,\r\n      payload: res.data.astronomy?.astro,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCurrentAstronomy = (url, params) => async dispatch => {\r\n  const res = await api(url, \"GET\", params, \"wa\");\r\n\r\n  if (res && res.status === 200) {\r\n    dispatch({\r\n      type: SET_ASTRO_DATA,\r\n      payload: res.data.astronomy.astro,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setCurrentMode = data => dispatch => {\r\n  dispatch({\r\n    type: SET_CURRENT_MODE,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const setDegreeMode = data => dispatch => {\r\n  dispatch({\r\n    type: SET_DEGREE,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const setCordinates = data => dispatch => {\r\n  dispatch({\r\n    type: SET_CORDINATES,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const getSearchResult = (url, params) => async dispatch => {\r\n  const res = await api(url, \"GET\", params, \"wa\");\r\n\r\n  if (res && res.status === 200) {\r\n    dispatch({\r\n      type: SET_SEARCH_RESULT,\r\n      payload: res.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getWeekdaysForecast = (url, params) => async dispatch => {\r\n  const res = await api(url, \"GET\", params, \"owm\");\r\n\r\n  if (res && res.status === 200) {\r\n    dispatch({\r\n      type: SET_WEEKDAYS_FORECAST,\r\n      payload: res.data.list,\r\n    });\r\n  }\r\n};\r\n"],"names":["Mainpage","lazy","Sidebar","connect","app","getCurrentAstronomy","getCurrentForecast","getWeekdaysForecast","setCordinates","currentMode","cords","useEffect","q","dt","moment","format","lat","lon","Suspense","fallback","className","indicator","spinning","tip","url","method","param","service","axios","params","key","aqi","cnt","units","headers","message","content","response","statusText","dispatch","api","res","status","type","SET_CURRENT_FORECAST","payload","data","current","SET_LOCATION","location","SET_ASTRO_DATA","astronomy","astro","setCurrentMode","SET_CURRENT_MODE","setDegreeMode","SET_DEGREE","SET_CORDINATES","getSearchResult","SET_SEARCH_RESULT","SET_WEEKDAYS_FORECAST","list"],"sourceRoot":""}